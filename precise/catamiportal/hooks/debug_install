#!/bin/bash -x

set -eux
CATAMI_HOME=/home/catami/catamiportal
#==================================================#
# These should be just the server requirements only 
# !! Exception being scipy for now. pip install not 
# working
#==================================================#
#juju-log "Installing Apache2, Django1.4, postgres, postgis via apt-get"
apt-get install -y python postgresql-9.1 apache2 python-setuptools postgresql-server-dev-9.1 postgresql-9.1-postgis postgis python-scipy binutils libproj-dev gdal-bin git unzip

#==================================================#
# setup the posgis template for postgresql
#==================================================#
GEOGRAPHY=0
POSTGIS_SQL=postgis.sql

if [ -d "/usr/share/postgresql/9.1/contrib/postgis-1.5" ]
then
    POSTGIS_SQL_PATH=/usr/share/postgresql/9.1/contrib/postgis-1.5
    GEOGRAPHY=1
fi

su postgres -c "createdb -E UTF8 template_postgis" && \
su postgres -c "( createlang -d template_postgis -l | grep plpgsql || createlang -d template_postgis plpgsql )" && \
su postgres -c "psql -d postgres -c \"UPDATE pg_database SET datistemplate='true' WHERE datname='template_postgis';\"" && \
su postgres -c "psql -d template_postgis -f $POSTGIS_SQL_PATH/$POSTGIS_SQL" && \
su postgres -c "psql -d template_postgis -f $POSTGIS_SQL_PATH/spatial_ref_sys.sql" && \
su postgres -c "psql -d template_postgis -c \"GRANT ALL ON geometry_columns TO PUBLIC;\"" && \
su postgres -c "psql -d template_postgis -c \"GRANT ALL ON spatial_ref_sys TO PUBLIC;\""

if [ $GEOGRAPHY -eq 1 ]
then
    su postgres -c "psql -d template_postgis -c \"GRANT ALL ON geography_columns TO PUBLIC;\""
fi

#==================================================#
# Setup the database and users
#==================================================#
#juju-log "setting up database and users"

# !!! For debugging.  Make sure user doesn't exist
#su postgres -c "dropdb Force"
#su postgres -c "dropuser pocock"

su postgres -c "createuser -R -A -d -U postgres pocock"
su postgres -c "createdb -E utf8 -O pocock -T template_postgis Force"
su postgres -c "psql -c \"ALTER USER pocock WITH PASSWORD 'qwer789ASDF456zxcv123';\""

sed -i '1a#!! Autogenerated by Jujuj catamiportal charm !!' /etc/postgresql/9.1/main/pg_hba.conf
sed -i '2alocal	        all     pocock                  md5'  /etc/postgresql/9.1/main/pg_hba.conf
sed -i '3ahost		all	all	0.0.0.0/0	md5' /etc/postgresql/9.1/main/pg_hba.conf

sed -i 's/#listen_addresses = /listen_addresses =/' /etc/postgresql/9.1/main/postgresql.conf
sed -i "s/localhost/*/" /etc/postgresql/9.1/main/postgresql.conf

sed -i "s/#port = 5432/port = 5432 #sed gen/" /etc/postgresql/9.1/main/postgresql.conf

#juju-log "Restarting postgres"
/etc/init.d/postgresql restart

#==================================================#
# Setup the python environment
#==================================================#
#juju-log "Setting up the python environment"
easy_install virtualenv
easy_install virtualenvwrapper
easy_install pip

#export WORKON_HOME=$HOME/.virtualenvs
#source /usr/local/bin/virtualenvwrapper.sh

#rmvirtualenv catami
#mkvirtualenv catami --system-site-packages
#workon catami

#sometimes it can take a little while for the virtualenv to be initiated, just hold up for a second before continuing
#sleep 5s

#==================================================#
# Pull the catami code from git and install 
#==================================================#
#juju-log "Pulling CATAMI code from git"

# !! For debugging.  remove existing directories
#rm -r /home/catami

mkdir -p /home/catami
mkdir -p /home/catami/catamiportal
cd /home/catami/catamiportal
git clone https://github.com/catami/catami.git
cd catami

#juju-log "Pip installing python dependencies" 
pip install -r requirements.txt

#juju-log "syncing database"
python manage.py syncdb --noinput


#juju-log "set up Django superuser"
su postgres -c "psql -d Force -c \"insert into auth_user (id, username, first_name, last_name, email, password, is_staff, is_active, is_superuser,last_login,date_joined) values (1, 'pocock','catami','catami', 'catami@ivec.org', '0ac737144798e2a0857c7bf34f984bce',true,true,true,'2012-11-01 14:26:20','2012-11-01 14:26:20')\""

#==================================================#
# setup initial migration for South
#==================================================#
echo Doing south migration
python manage.py schemamigration Force --initial
python manage.py migrate Force 0001 --fake
python manage.py migrate Force

python manage.py schemamigration staging --initial
python manage.py migrate staging 00001 --fake
python manage.py migrate staging

#==================================================#
# Download and install solr
#==================================================#
#juju-log "pulling and installing solr"
echo pulling and installing solr
cd ..
wget  http://mirrors.gigenet.com/apache/lucene/solr/4.0.0-BETA/apache-solr-4.0.0-BETA.zip
unzip apache-solr-4.0.0-BETA.zip
cd apache-solr-4.0.0-BETA
cd example
nohup java -jar start.jar &

echo installing search
cd ../../catami
sh src/install_search.sh

echo rebuilding index
python manage.py rebuild_index --noinput

echo updating index
python manage.py update_index

#==================================================#
# Set up Apache port reverse proxy
#==================================================#
a2enmod proxy_http
a2enmod rewrite

echo "catamiportal install complete"

#==================================================#
# Add cron job to do a daily backup.
#==================================================#
export DJANGO_SETTINGS_MODULE=catamiPortal.settings


#==================================================#
# hoping for the best 
#==================================================#
# add the current directory and the parent directory to PYTHONPATH
# sets DJANGO_SETTINGS_MODULE

echo "Creating cron job for backup"
BAKSCRIPT=/etc/cron.daily/catamiPortalBak.py
sudo touch $BAKSCRIPT
sudo echo \#! /usr/bin/env python >> $BAKSCRIPT
sudo echo import os >> $BAKSCRIPT
sudo echo import sys >> $BAKSCRIPT
sudo echo os.chdir\(\'$CATAMI_HOME/catami\'\) >> $BAKSCRIPT
sudo echo sys.path.append\(\'$CATAMI_HOME/catami/rebels\'\) >> $BAKSCRIPT
sudo echo sys.path.append\(\'$CATAMI_HOME/catami\'\) >> $BAKSCRIPT
sudo echo os.environ\[\'DJANGO_SETTINGS_MODULE\' \] = \"catamiPortal.settings\" >> $BAKSCRIPT
sudo echo import rebels.administratorbot as administratorbot >> $BAKSCRIPT
sudo echo bender = administratorbot.Robot\(\) >> $BAKSCRIPT
sudo echo bender.make_local_backup\(directory=\'${CATAMI_HOME}/catami/rebels/backup/\'\) >> ${BAKSCRIPT}

chmod +x $BAKSCRIPT

#juju-log "catamiportal install complete"
echo DONE!!
