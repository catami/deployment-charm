#!/bin/bash

set -eux

#==================================================#
# These should be just the server requirements only 
# !! Exception being scipy for now. pip install not 
# working
#==================================================#
#juju-log "Installing Apache2, Django1.4, postgres, postgis via apt-get"
apt-get install -y python postgresql-9.1 apache2 python-setuptools postgresql-server-dev-9.1 postgresql-9.1-postgis postgis python-scipy binutils libproj-dev gdal-bin git

#==================================================#
# setup the posgis template for postgresql
#==================================================#
GEOGRAPHY=0
POSTGIS_SQL=postgis.sql

if [ -d "/usr/share/postgresql/9.1/contrib/postgis-1.5" ]
then
    POSTGIS_SQL_PATH=/usr/share/postgresql/9.1/contrib/postgis-1.5
    GEOGRAPHY=1
fi

su postgres -c "createdb -E UTF8 template_postgis" && \
su postgres -c "( createlang -d template_postgis -l | grep plpgsql || createlang -d template_postgis plpgsql )" && \
su postgres -c "psql -d postgres -c \"UPDATE pg_database SET datistemplate='true' WHERE datname='template_postgis';\"" && \
su postgres -c "psql -d template_postgis -f $POSTGIS_SQL_PATH/$POSTGIS_SQL" && \
su postgres -c "psql -d template_postgis -f $POSTGIS_SQL_PATH/spatial_ref_sys.sql" && \
su postgres -c "psql -d template_postgis -c \"GRANT ALL ON geometry_columns TO PUBLIC;\"" && \
su postgres -c "psql -d template_postgis -c \"GRANT ALL ON spatial_ref_sys TO PUBLIC;\""

if [ $GEOGRAPHY -eq 1 ]
then
    su postgres -c "psql -d template_postgis -c \"GRANT ALL ON geography_columns TO PUBLIC;\""
fi

#==================================================#
# Setup the database and users
#==================================================#
#juju-log "setting up database and users"

# !!! For debugging.  Make sure user doesn't exist
#su postgres -c "dropdb Force"
#su postgres -c "dropuser pocock"

su postgres -c "createuser -R -A -d -U postgres pocock"
su postgres -c "createdb -E utf8 -O pocock -T template_postgis Force"
su postgres -c "psql -c \"ALTER USER pocock WITH PASSWORD 'qwer789ASDF456zxcv123';\""

sed -i '1a#!! Autogenerated by Jujuj catamiportal charm !!' /etc/postgresql/9.1/main/pg_hba.conf
sed -i '2alocal	        all     pocock                  md5'  /etc/postgresql/9.1/main/pg_hba.conf
sed -i '3ahost		all	all	0.0.0.0/0	md5' /etc/postgresql/9.1/main/pg_hba.conf

sed -i 's/#listen_addresses = /listen_addresses =/' /etc/postgresql/9.1/main/postgresql.conf
sed -i "s/localhost/*/" /etc/postgresql/9.1/main/postgresql.conf

sed -i "s/#port = 5432/port = 5432 #sed gen/" /etc/postgresql/9.1/main/postgresql.conf

#juju-log "Restarting postgres"
/etc/init.d/postgresql restart

#==================================================#
# Setup the python environment
#==================================================#
#juju-log "Setting up the python environment"
easy_install virtualenv
easy_install virtualenvwrapper
easy_install pip

#==================================================#
# Pull the catami code from git and install 
#==================================================#
#juju-log "Pulling CATAMI code from git"

# !! For debugging.  remove existing directories
#rm -r /home/catami

mkdir -p /home/catami
mkdir -p /home/catami/catamiportal
cd /home/catami/catamiportal
git clone https://github.com/catami/catami.git
cd catami

#juju-log "Pip installing python dependencies" 
pip install -r requirements.txt

#juju-log "syncing database"
python manage.py syncdb --noinput

#juju-log "set up Django superuser"
su postgres -c "psql -d Force -c \"insert into auth_user (id, username, first_name, last_name, email, password, is_staff, is_active, is_superuser,last_login,date_joined) values (1, 'pocock','catami','catami', 'catami@ivec.org', '0ac737144798e2a0857c7bf34f984bce',true,true,true,'2012-11-01 14:26:20','2012-11-01 14:26:20')\""

#juju-log "catamiportal install complete"
