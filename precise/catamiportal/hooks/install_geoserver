#!/bin/bash -x
#==================================================#
# SETUP GEOSERVER
#==================================================#

echo 'Setting up geoserver'

GEOSERVER_WAIT_TIME=240 #secs ... sometimes the sandbox is running slowly and needs time

#Check if geoserver is already on here, if not then download it
if [ -a geoserver-2.2.4-war.zip ]
then
    echo 'geoserver-2.2.4.zip found, skipping download'
else
    echo 'Downloading geoserver'
    wget http://downloads.sourceforge.net/project/geoserver/GeoServer/2.2.4/geoserver-2.2.4-war.zip
fi

#stop tomcat, so we can make some adjustments
service tomcat7 stop

#put geoserver into tomcat
unzip geoserver-2.2.4-war.zip
#unzip geoserver.war -d geoserver
sudo mv geoserver.war /var/lib/tomcat7/webapps/

#Geoserver takes tome time to finish installing.  TODO: find someway of monitoring
sleep $GEOSERVER_WAIT_TIME

# sed replace the username and password in datastore-config.xml
sed -i "s/the_username/$U_NAME/g" datastore-config.xml
sed -i "s/the_password/$PASSWORD/g" datastore-config.xml

# relace the host with given host
sed -i "s/the_host/$SERVER/g" datastore-config.xml

#restart geoserver
service tomcat7 start

# do this as default admin admin:geoserver
curl --connect-timeout 30 -u admin:geoserver -v -XPOST -H 'Content-type: text/xml' \
   -d '<workspace><name>catami</name></workspace>' \
   http://localhost:8080/geoserver/rest/workspaces ;

curl --connect-timeout 30 -u admin:geoserver -XPOST -T datastore-config.xml -H 'Content-type: text/xml' \
  http://localhost:8080/geoserver/rest/workspaces/catami/datastores ;

#for catamidb images
curl --connect-timeout 30 -u admin:geoserver -XPOST -H 'Content-type: text/xml' \
    -d "<featureType><name>catamidb_images</name><metadata><entry key=\"JDBC_VIRTUAL_TABLE\"><virtualTable><name>catamidb_images</name><sql>SELECT public.catamidb_pose.deployment_id,public.catamidb_pose.position,public.catamidb_pose.depth,public.catamidb_image.id,public.catamidb_image.web_location,public.catamidb_image.archive_location,public.catamidb_deployment.start_time_stamp,public.catamidb_deployment.end_time_stamp,public.measurements_view.temperature,public.measurements_view.salinity,public.measurements_view.pitch,public.measurements_view.roll,public.measurements_view.yaw,public.measurements_view.altitude FROM public.catamidb_pose,public.catamidb_image,public.measurements_view, public.catamidb_deployment WHERE public.catamidb_pose.id=public.catamidb_image.id and public.catamidb_pose.id=public.measurements_view.id and public.catamidb_pose.deployment_id=public.catamidb_deployment.id</sql><keyColumn>id</keyColumn><geometry><name>position</name><type>Point</type><srid>4326</srid></geometry></virtualTable></entry></metadata></featureType>" \
    http://localhost:8080/geoserver/rest/workspaces/catami/datastores/catamidb/featuretypes ;

#for collection images
curl --connect-timeout 30 -u admin:geoserver -XPOST -H 'Content-type: text/xml' \
    -d "<featureType><name>collection_images</name><metadata><entry key=\"JDBC_VIRTUAL_TABLE\"><virtualTable><name>collection_images</name><sql>SELECT public.catamidb_image.id, public.collection_collection_images.collection_id, public.catamidb_pose.deployment_id, public.catamidb_pose.position, public.catamidb_pose.depth, public.catamidb_image.web_location, public.catamidb_image.archive_location FROM public.collection_collection_images,public.catamidb_pose,public.catamidb_image WHERE public.catamidb_pose.id = public.catamidb_image.pose_id AND public.collection_collection_images.image_id=public.catamidb_image.id</sql><keyColumn>id</keyColumn><geometry><name>position</name><type>Point</type><srid>4326</srid></geometry></virtualTable></entry></metadata></featureType>" \
    http://localhost:8080/geoserver/rest/workspaces/catami/datastores/catamidb/featuretypes ;


#if doing this on an existing server with same style name that has been deleted from geoserver,
#need to actually delete the styles/catami-colour-by-depth.sld file first - geoserver does not delete it for some reason
curl --connect-timeout 30 -u admin:geoserver -XPOST -H 'Content-type: application/vnd.ogc.sld+xml' \
  -d @catami-colour-by-depth.sld http://localhost:8080/geoserver/rest/styles ;

curl --connect-timeout 30 -u admin:geoserver -XPUT -H 'Content-type: text/xml' \
  -d '<layer><defaultStyle><name>catami-colour-by-depth</name></defaultStyle><enabled>true</enabled></layer>' \
  http://localhost:8080/geoserver/rest/layers/catami:catamidb_images ;

curl --connect-timeout 30 -u admin:geoserver -XPUT -H 'Content-type: text/xml' \
  -d '<layer><defaultStyle><name>catami-colour-by-depth</name></defaultStyle><enabled>true</enabled></layer>' \
  http://localhost:8080/geoserver/rest/layers/catami:collection_images ;

#TODO change username and password for admin
# look in /var/lib/tomcat7/webapps/geoserver/data/security
#touch /var/lib/tomcat7/webapps/geoserver/data/security/users.properties.old 
sed -i "s/admin=geoserver/$U_NAME=$PASSWORD/g" /var/lib/tomcat7/webapps/geoserver/data/security/users.properties.old
sudo mv /var/lib/tomcat7/webapps/geoserver/data/security/users.properties.old /var/lib/tomcat7/webapps/geoserver/data/security/users.properties

#sed -i "s/admin=geoserver/$U_NAME=$PASSWORD/g" /var/lib/tomcat7/webapps/geoserver/data/security/users.properties
  
#install geoserver templates for in-view popups
sed -i "s@MEDIA_HOST@$SERVER/media/catami_live/importedimages/@g" content.ftl
sudo mkdir /var/lib/tomcat7/webapps/geoserver/data/templates/
sudo cp header.ftl /var/lib/tomcat7/webapps/geoserver/data/templates/
sudo cp footer.ftl /var/lib/tomcat7/webapps/geoserver/data/templates/
sudo cp content.ftl /var/lib/tomcat7/webapps/geoserver/data/workspaces/catami/catamidb/catamidb_images/
sudo cp content.ftl /var/lib/tomcat7/webapps/geoserver/data/workspaces/catami/catamidb/collection_images/

echo 'Restarting tomcat'
sudo service tomcat7 restart

echo 'Restarting apache'
sudo service apach2 restart
